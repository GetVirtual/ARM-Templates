{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Site1location": {
      "type": "string",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "defaultValue": "West Europe",
      "metadata": {
        "description": "Location for the first site"
      }
    },
    "Site1vmcount": {
      "type": "int",
      "minValue": 1,
      "defaultValue": "3"
    },
    "Site2location": {
      "type": "string",
      "allowedValues": [
        "North Europe",
        "West Europe"
      ],
      "defaultValue": "North Europe",
      "metadata": {
        "description": "Location for the second site"
      }
    },
    "Site2vmcount": {
      "type": "int",
      "minValue": 1,
      "defaultValue": "3"
    },
    "AdminUserName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "vmadmin"
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "WindowsOSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2016-Datacenter",
        "2019-Datacenter"
      ]
    },
    "UniqueDNSPrefix": {
      "type": "string",
      "defaultValue": "jlo"
    }
  },
  "variables": {
    "site1vnetPrefix": "10.10.11.0/24",
    "site1vnetSubnet1Name": "default",
    "site1vnetSubnet1Prefix": "10.10.11.0/24",
    "site1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'site1vnet')]",
    "site1SubnetRef": "[concat(variables('site1VnetID'), '/subnets/', variables('site1vnetSubnet1Name'))]",
    "site2vnetPrefix": "10.10.12.0/24",
    "site2vnetSubnet1Name": "default",
    "site2vnetSubnet1Prefix": "10.10.12.0/24",
    "site2VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'site2vnet')]",
    "site2SubnetRef": "[concat(variables('site2VnetID'), '/subnets/', variables('site2vnetSubnet1Name'))]",
    "site1as1Name": "site1as",
    "site2as1Name": "site2as",
    "ImagePublisher": "MicrosoftWindowsServer",
    "ImageOffer": "WindowsServer",
    "VmSize": "Standard_D2_v2",
    "site1vmName": "site1vm",
    "site2vmName": "site2vm",
    
    "site1albpip": "site1alb-pip",
    "site2albpip": "site2alb-pip",
    "site1albname": "site1alb",
    "site2albname": "site2alb",
    "trafficmanagername": "tmprofile",
    "trafficmanagerdns": "[concat(parameters('UniqueDNSPrefix'), 'tm')]",
    "DSCurl": "https://github.com/GetVirtual/ARM-Templates/raw/master/MultiRegionHA/DSC/IIS.zip",
    "DSCfilename": "IIS.ps1",
    "DSCfunction": "IIS",
    "site1nsgname": "site1nsg",
    "site2nsgname": "site2nsg"
  },
  "resources": [
    {
      "name": "site1vnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('site1location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('site1nsgname'))]"
      ],
      "tags": {
        "displayName": "site1vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('site1vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('site1vnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('site1vnetSubnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('site1nsgname'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "site2vnet",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('site2location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('site2nsgname'))]"
      ],
      "tags": {
        "displayName": "site2vnet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('site2vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('site2vnetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('site2vnetSubnet1Prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('site2nsgname'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('site1nsgname')]",
      "location": "[parameters('Site1location')]",
      "properties": {
        "securityRules": [
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('site2nsgname')]",
      "location": "[parameters('Site2location')]",
      "properties": {
        "securityRules": [
          {
            "name": "web_rule",
            "properties": {
              "description": "Allow WEB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('site1vmName'), copyIndex(1),'nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('site1location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'site1vnet')]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('site1albname'))]"
      ],
      "tags": {
        "displayName": "[concat(variables('site1vmName'), copyIndex(1),'nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('site1SubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site1albname')), '/backendAddressPools/', variables('site1albname'), '-pool')]"
                }
              ]
            }
          }
        ]
      },
      "copy": {
        "name": "site1niccopy",
        "count": "[parameters('Site1vmcount')]"
      }
    },
    {
      "name": "[concat(variables('site1vmName'), copyIndex(1))]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('site1location')]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "site1niccopy",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('site1as1Name'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('site1as1Name'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('VmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('site1vmName'), copyIndex(1))]",
          "adminUsername": "[parameters('AdminUserName')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[parameters('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('site1vmName'), copyIndex(1),'osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('site1vmName'), copyIndex(1),'nic'))]"
            }
          ]
        }
      },
      "copy": {
        "name": "site1vmcopy",
        "count": "[parameters('Site1vmcount')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('site1vmName'), copyIndex(1),'/Microsoft.Powershell.DSC')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('Site1location')]",
      "dependsOn": [
        "site1vmcopy"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.76",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "configuration": {
            "url": "[variables('DSCurl')]",
            "script": "[variables('DSCfilename')]",
            "function": "[variables('DSCfunction')]"
          }
        }
      },
      "copy": {
        "name": "site1dsccopy",
        "count": "[parameters('Site1vmcount')]"
      }
    },
    {
      "name": "[variables('site1as1Name')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('site1location')]",
      "apiVersion": "2018-06-01",
      "dependsOn": [],
      "tags": {
        "displayName": "site1as1"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "name": "[variables('site2as1Name')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('site2location')]",
      "apiVersion": "2018-06-01",
      "dependsOn": [],
      "tags": {
        "displayName": "site2as1"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "name": "[variables('site1albpip')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('site1location')]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": [],
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('UniqueDNSPrefix'), 'site1')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "name": "[variables('site1albname')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('site1location')]",
      "scale": null,
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('site1albpip'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(variables('site1albname'),'-pool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[concat(variables('site1albname'),'-rule')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site1albname')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site1albname')), '/backendAddressPools/', variables('site1albname'),'-pool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site1albname')), '/probes/', variables('site1albname'),'-probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[concat(variables('site1albname'),'-probe')]",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "inboundNatPools": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('site1albpip'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "name": "[variables('site2albpip')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('site2location')]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": [],
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('UniqueDNSPrefix'), 'site2')]"
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "name": "[variables('site2albname')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('site2location')]",
      "scale": null,
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('site2albpip'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(variables('site2albname'),'-pool')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[concat(variables('site2albname'),'-rule')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site2albname')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site2albname')), '/backendAddressPools/', variables('site2albname'),'-pool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('site2albname')), '/probes/', variables('site2albname'),'-probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[concat(variables('site2albname'),'-probe')]",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "inboundNatPools": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('site2albpip'))]"
      ]
    },
    {
      "type": "Microsoft.Network/trafficManagerProfiles",
      "name": "[variables('trafficmanagername')]",
      "apiVersion": "2018-04-01",
      "location": "global",
      "tags": {},
      "properties": {
        "profileStatus": "Enabled",
        "trafficRoutingMethod": "Weighted",
        "dnsConfig": {
          "relativeName": "[variables('trafficmanagerdns')]",
          "ttl": 60
        },
        "monitorConfig": {
          "protocol": "TCP",
          "port": 80,
          "intervalInSeconds": 30,
          "toleratedNumberOfFailures": 3,
          "timeoutInSeconds": 10
        },
        "endpoints": [
          {
            "name": "TMendpointSite1",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "endpointStatus": "Enabled",
              "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('site1albpip'))]",
              "weight": 1,
              "priority": 1
            }
          },
          {
            "name": "TMendpointSite2",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "properties": {
              "endpointStatus": "Enabled",
              "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('site2albpip'))]",
              "weight": 2,
              "priority": 2
            }
          }
        ],
        "trafficViewEnrollmentStatus": "Disabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('site1albpip'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('site2albpip'))]"
      ]
    }
  ]

}